.flex-container {
    display: flex;
    flex-direction: row;
}

.random-container {
    display: flex;
    background-color: #5aa6d8;
    overflow-y: scroll;
}

.flex-a-team {
    background-color: #FF8A80;
    color: black;
    width: 50%;
    text-align: left;
    font-size: 50px;
    font-weight: bold;
}

.flex-b-team {
    background-color: #BBDEFB;
    color: black;
    width: 50%;
    text-align: right;
    font-size: 50px;
    font-weight: bold;
}


.number-button {
    width: 100%;
    height: 60px;
    background: linear-gradient(to top, #ff6b6b, #ff9999);
    border-radius: 10px;
    border: 2px solid red;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: center;
    align-items: center;
}

.number-button span {
    font-size: 2em;
    background-color: #0099ff;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
}



.button-container {
    height: 70px;
    background: linear-gradient(to bottom, #0077cc, #0099ff);
    border-radius: 15px;
    border: 2px solid #ff66cc;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 0 15px;
    font-size: 1.2em;
}

.text-left {
    flex: 2;
    text-align: left;
}

.text-right {
    flex: 1;
    text-align: right;
}

.container {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    /* ensure it takes full width */
    flex-wrap: wrap;
    /* allow it put a bit of space between the items */
}

.flip-container {
    perspective: 1500px;
    display: inline-block;
    /* Add this line */
    margin-right: 20px;
    /* Add a bit of space between cards, adjust as needed */
    width: 47%;
    /* adjust this to your preference */
}

.card {
    width: 100%;
    height: 70px;
    position: relative;
    transform-style: preserve-3d;
    transform-origin: center center;
    transition: transform 0.5s;
}

.card-face {
    position: absolute;
    width: 100%;
    height: 70px;
    backface-visibility: hidden;
}

.card-face-front {
    z-index: 2;
}

.card-face-back {
    transform: rotateX(180deg);
}

.overlay {
    position: fixed;
    /* This will make the div fixed and cover the entire viewport */
    top: 0;
    left: 0;
    width: 100vw;
    /* Viewport width */
    height: 100vh;
    /* Viewport height */
    background-color: rgba(0, 0, 0, 0.7);
    /* Black background with 70% opacity */
    color: white;
    /* Text color */
    z-index: 1000;
    /* This ensures the overlay is on top of other content */
    display: flex;
    /* Flexbox for centering content */
    justify-content: center;
    /* Center horizontally */
    align-items: center;
    /* Center vertically */
}


.overlay-qrcode {
    position: fixed;
    top: 0;
    left: 20%;
    width: 60vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
}

.overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: rgba(0, 0, 0, 0.7);
    color: white;
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
    animation: fadeOut 5s forwards;
    /* This animation will execute immediately when the page loads */
}

.overlay-timer {
    position: fixed;
    /* This will make the div fixed and cover the entire viewport */
    top: 0;
    left: 0;
    width: 100vw;
    /* Viewport width */
    height: 100vh;
    /* Viewport height */
    background-color: rgba(0, 0, 0, 0.7);
    /* Black background with 70% opacity */
    color: white;
    /* Text color */
    z-index: 1000;
    /* This ensures the overlay is on top of other content */
    display: flex;
    /* Flexbox for centering content */
    justify-content: center;
    /* Center horizontally */
    align-items: center;
    /* Center vertically */
}

@keyframes fadeOut {
    to {
        opacity: 0;
        pointer-events: none;
        /* Ensure it won't interfere with other elements after fading out */
    }
}

.puzzle-board {
    width: 500px;
    height: 500px;
    position: relative;
    overflow: hidden;
}

.cover {
    width: 100px;
    height: 100px;
    background-color: #e0e0e0;
    position: absolute;
    border: 1px solid black;
    box-sizing: border-box;
    /* ensures that the border doesn't increase the size of the tile */
}

.number {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-weight: bold;
    color: black;
    font-size: 24px;
}

.countdown-timer {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    height: 100vh;
}

.timer {
    font-size: 13rem;
    font-weight: bold;
}

.flex-item {
    display: flex;
    position: relative;
    left: 0;
    transition: left 4s ease-out;
}

.flex-center {
    display:flex;
    position: absolute;
    left: 50%;
    border-radius: 10px;
    padding: 10px;
    background-color: red;
}

.item {
    margin: 20px;
}

img {
    border-radius: 5px;
}

#text{
    position: absolute;
    top: 50%;
    left: 50%;
    font-size: 50px;
    color: white;
    transform: translate(-50%,-50%);
    -ms-transform: translate(-50%,-50%);
    border-radius: 5px;
    padding: 10px;
    background-color: red;
  }
